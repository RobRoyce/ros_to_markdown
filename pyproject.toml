[project]
name = "ros_to_markdown"
version = "0.1.0"
description = "Convert ROS systems to Markdown for LLM processing"
authors = [
    { name = "Rob Royce", email = "rob.royce@jpl.nasa.gov" }
]
requires-python = ">=3.8,<3.13"
dependencies = [
    "pyyaml",
    "structlog[dev]",
    "colorama>=0.4.0",
    "pydantic",
    "jinja2",
    "clang==13.0.1",
    "networkx",
    "rich",
    "click",
]
readme = "README.md"
license = { text = "Apache 2.0" }

[project.optional-dependencies]
ros1 = [
    "rospy",
    "rospkg>=1.5.0",
    "catkin-tools>=0.9.0",
]
ros2 = [
    "rclpy",
    "ament-package>=0.14.0",
    "ros2cli>=0.18.0",
]
dev = [
    "black>=23.0",
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.0.290",
    "pytest-mock>=3.10.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/ros_to_markdown"]

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=ros_to_markdown"
markers = [
    "integration: marks tests that interact with a real ROS environment",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
exclude = [
    'src/ros_to_markdown_old/',
    'tests_old/',
]

[[tool.mypy.overrides]]
module = [
    "rclpy.*",
    "rospy.*",
    "pydantic.*",
    "structlog.*",
]
ignore_missing_imports = true

[project.scripts]
ros-to-markdown = "ros_to_markdown.cli:main"
