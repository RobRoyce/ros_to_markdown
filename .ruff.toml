# Ruff configuration for ros_to_markdown
# See https://docs.astral.sh/ruff/settings/

# Target Python versions
target-version = "py38"  # Lowest supported version (for ROS Noetic)

# Line length to match project standards
line-length = 100

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "build",
    "dist",
    "__pycache__",
    "*.egg-info",
]

[lint]
# Enable all recommended rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
    "W",   # pycodestyle warnings
    "D",   # pydocstyle
    "ANN", # flake8-annotations
]

# Ignore certain rules
# ignore = [
#     "D203",  # one-blank-line-before-class (conflicts with D211)
#     "D212",  # multi-line-summary-first-line (conflicts with D213)
#     "D107",  # missing docstring in __init__
# ]

# Per-file ignores
[lint.per-file-ignores]
"tests/*" = [
    "D100",    # Missing docstring in public module (relaxed for tests)
    "D103",    # Missing docstring in public function (relaxed for tests)
    "S101",    # Use of assert detected (needed for pytest)
]
"__init__.py" = [
    "D104",    # Missing docstring in public package
]

[lint.pydocstyle]
convention = "google"      # Use Google-style docstrings

[lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["ros_to_markdown"]
known-third-party = ["rospy", "rclpy"]
section-order = ["future", "standard-library", "first-party", "third-party", "local-folder"] 
